#!/usr/bin/make -f
# -*- makefile -*-

#############################################################################
#
#     GNU Make Debian package makefile for SRB2
#
# Copyright (C) 1998-2010 by Callum Dickinson
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
# GNU General Public License for more details.
#
# This file most likely will not need to be modified to make
# branches of SRB2 capable of making their own Debian packages,
# instead look at the /debian/control file for configuration.
#
#############################################################################

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# user/group of to-be-installed files
ROOT_USER  := 0
ROOT_GROUP := 0

# determine cross-compile (may need some work)
CROSS_COMPILE_BUILD    := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
CROSS_COMPILE_HOST     := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
CROSS_COMPILE 	       := $(shell test "$(CROSS_COMPILE_BUILD)" != "$(CROSS_COMPILE_HOST)" && echo "$(CROSS_COMPILE_HOST)")
ifdef CROSS_COMPILE
CROSS_COMPILE	       := $(CROSS_COMPILE)-
endif

INSTALL = install -o $(ROOT_USER) -g $(ROOT_GROUP) -m 644
MV	= mv
RM	= rm -rf
STRIP	= $(CROSS_COMPILE)strip --strip-unneeded
DIR	= $(shell pwd)

# don't like the head/tail parsing for $(PACKAGE) and $(DBGPKG) but nothing else will work properly with $(shell)
PACKAGE = $(shell cat $(DIR)/debian/control | grep 'Package:' | head -n1 | sed -e 's/Package: //')
TITLE	= Sonic Robo Blast 2
SECTION = Games/Action
DBGPKG	= $(shell cat $(DIR)/debian/control | grep 'Package:' | tail -n1 | sed -e 's/Package: //')
EXENAME = srb2
DBGNAME	= debug/$(EXENAME)
PKGDIR	= usr/games/srb2
DBGDIR	= usr/lib/debug/$(PKGDIR)
PREFIX	= $(shell test "$(CROSS_COMPILE_BUILD)" != "$(CROSS_COMPILE_HOST)" && echo "PREFIX=$(CROSS_COMPILE)")
OS	= $(shell if "`echo $(CROSS_COMPILE_HOST) | grep 'linux'`"; then test "`echo $(CROSS_COMPILE_HOST) | grep 'x86_64'`" && echo "LINUX64=1" || echo "LINUX=1"; else echo "FREEBSD=1"; fi)
NONX86	= $(shell if ! test "`echo $(CROSS_COMPILE_HOST) | grep 'i[3-6]86'`"; then test "`echo $(CROSS_COMPILE_HOST) | grep 'x86_64'`" || echo "NONX86=1"; fi)
ARCHTYPE = $(shell if ! test "`echo $(CROSS_COMPILE_HOST) | grep 'i[3-6]86'`"; then if ! test "`echo $(CROSS_COMPILE_HOST) | grep 'x86_64'`"; then test "`echo $(CROSS_COMPILE_HOST) | grep 'powerpc'`" && echo "ARCHTYPE=PPC" || echo "ARCHTYPE=`echo $(CROSS_COMPILE_HOST) | tr 'a-z' 'A-Z' | cut -f 1,1 -d'-'`"; fi; fi)
MAKEARGS = $(OS) $(NONX86) $(ARCHTYPE) $(PREFIX) EXENAME=$(EXENAME) DBGNAME=$(DBGNAME)
MENUFILE1 = ?package($(PACKAGE)):needs="X11" section="$(SECTION)"
MENUFILE2 = title="$(TITLE)" command="/$(PKGDIR)/$(PACKAGE)"

build:
	make -C $(DIR)/src $(MAKEARGS)
	$(STRIP) $(DIR)/bin/Linux/Release/$(EXENAME)

binary-indep:
	# currently does nothing, only here to satisfy lintian
	echo "TODO: $(PACKAGE)-data"

binary-arch:
	echo "`echo '$(MENUFILE1)\\'`" > $(DIR)/debian/menu
	echo " `echo '$(MENUFILE2)'`" >> $(DIR)/debian/menu
	echo $(PKGDIR) > $(DIR)/debian/$(PACKAGE).install
	echo $(DBGDIR) > $(DIR)/debian/$(DBGPKG).install
	mkdir -p $(DIR)/debian/tmp/$(PKGDIR) $(DIR)/debian/tmp/$(DBGDIR)
	$(INSTALL) $(DIR)/bin/Linux/Release/$(EXENAME) $(DIR)/debian/tmp/$(PKGDIR)/$(PACKAGE)
	$(INSTALL) $(DIR)/bin/Linux/Release/$(DBGNAME) $(DIR)/debian/tmp/$(DBGDIR)/$(PACKAGE)
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	# dh_installexamples
	dh_install --sourcedir=$(DIR)/debian/tmp
	dh_installmenu
	# dh_installdebconf
	# dh_installlogrotate
	# dh_installemacsen
	# dh_installpam
	# dh_installmime
	# dh_python
	# dh_installinit
	# dh_installcron
	# dh_installinfo
	# dh_installman
	# dh_link
	dh_compress
	dh_fixperms
	# dh_perl
	# dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch

clean:
	make -C $(DIR)/src $(MAKEARGS) clean cleandep
	$(RM) $(DIR)/bin/Linux/Release/*
	$(RM) $(DIR)/debian/$(PACKAGE)/*
	$(RM) $(DIR)/debian/$(DBGPKG)/*
	$(RM) $(DIR)/debian/tmp/*
	$(RM) $(DIR)/debian/$(PACKAGE).install
	$(RM) $(DIR)/debian/$(DBGPKG).install
	$(RM) $(DIR)/debian/menu
	$(RM) $(DIR)/debian/files

.PHONY: all clean binary binary-arch binary-indep build
